{
  // Place your área de trabajo de TransversalFront snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  "Select": {
    "scope": "typescriptreact",
    "prefix": ["app-input-select", "SelectComponent"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<SelectComponent options={${3:[]}} optionPropkey='${4:id}' optionPropLabel='${5:name}' />",
      "</Form.Item>",
      ""
    ],
    "description": "Input select control."
  },
  "Datepicker": {
    "scope": "typescriptreact",
    "prefix": ["app-input-datepicker", "DatepickerComponent"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<DatepickerComponent picker='$3' ${4| ,dateShowTime|} dateDisabledType='${5|default,after,afterYesterday,afterTomorrow,before,beforeYesterday,beforeTomorrow|}' dateFormatType='${6|default,dateTime,dateTimes,month,week,time,times|}' />",
      "</Form.Item>",
      ""
    ],
    "description": "Input para el control de las fechas."
  },
  "Rangepicker": {
    "scope": "typescriptreact",
    "prefix": ["app-input-rangepicker", "RangepickerComponent"],
    "body": [
      "{/*",
      "// Componentes",
      "import { RangepickerComponent } from 'app/shared/components/inputs/rangepicker.component'; */}",
      "",
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<RangepickerComponent picker='$3' ${4| ,dateShowTime|} dateDisabledType='${5|default,after,afterYesterday,afterTomorrow,before,beforeYesterday,beforeTomorrow|}' dateFormatType='${6|default,dateTime,dateTimes,month,week,time,times|}' />",
      "</Form.Item>",
      ""
    ],
    "description": "Input para el control de los rangos de fechas."
  },
  "Input": {
    "scope": "typescriptreact",
    "prefix": ["app-input-text", "Input"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<Input allowClear placeholder='${3:Placeholder}' autoComplete='off' />",
      "</Form.Item>",
      ""
    ],
    "description": "Input general de texto."
  },
  "Textarea": {
    "scope": "typescriptreact",
    "prefix": ["app-input-textarea", "TextArea"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<Input.TextArea",
      "\t\tshowCount",
      "\t\tallowClear",
      "\t\tmaxLength={${3:250}}",
      "\t\tplaceholder='${4:Escriba aquí...}'",
      "\t\tautoSize={{ minRows: 4, maxRows: 8 }}",
      "\t/>",
      "</Form.Item>",
      ""
    ],
    "description": "Input área de texto."
  },
  "Number": {
    "scope": "typescriptreact",
    "prefix": ["app-input-number", "Number"],
    "body": [
      "{/*",
      "// Antd",
      "import InputNumber from 'antd/es/input-number';",
      "",
      "// Hook",
      "import { useFormatNumber } from 'app/shared/hooks/format-number.hook';",
      "",
      "const { format: formatNumber, parser: parserNumber } = useFormatNumber(); */}",
      "",
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<InputNumber className='w-100' placeholder='${3:#}' formatter={formatNumber} parser={parserNumber} />",
      "</Form.Item>",
      ""
    ],
    "description": "Input numerico."
  },
  "Radio": {
    "scope": "typescriptreact",
    "prefix": ["app-input-radio", "Radio"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<Radio.Group>",
      "\t\t<Radio value='a'>item 1</Radio>",
      "\t\t<Radio value='b'>item 2</Radio>",
      "\t\t<Radio value='c'>item 3</Radio>",
      "\t</Radio.Group>",
      "</Form.Item>",
      ""
    ],
    "description": "Input radio selección."
  },
  "RadioButton": {
    "scope": "typescriptreact",
    "prefix": ["app-input-radio-button", "RadioButton"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<Radio.Group buttonStyle='solid'>",
      "\t\t<Radio.Button value='a'>item 1</Radio.Button>",
      "\t\t<Radio.Button value='b'>item 2</Radio.Button>",
      "\t\t<Radio.Button value='c'>item 3</Radio.Button>",
      "\t</Radio.Group>",
      "</Form.Item>",
      ""
    ],
    "description": "Input radio selección."
  },
  "Checkbox": {
    "scope": "typescriptreact",
    "prefix": ["app-input-checkbox", "Checkbox"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<Checkbox.Group>",
      "\t\t<Checkbox value='A'>A</Checkbox>",
      "\t\t<Checkbox value='B'>B</Checkbox>",
      "\t\t<Checkbox value='C' disabled>C</Checkbox>",
      "\t</Checkbox.Group>",
      "</Form.Item>",
      ""
    ],
    "description": "Input checkbox selección."
  },
  "Slider": {
    "scope": "typescriptreact",
    "prefix": ["app-input-slider", "Slider"],
    "body": [
      "<Form.Item label='$1' name='$2' rules={[{ required: true }]}>",
      "\t<Slider marks={{ 0: 'A', 20: 'B', 40: 'C', 60: 'D', 80: 'E', 100: 'F' }} />",
      "</Form.Item>",
      ""
    ],
    "description": "Input slider selección."
  },
  "Switch": {
    "scope": "typescriptreact",
    "prefix": ["app-input-switch", "Switch"],
    "body": [
      "<Form.Item label='$1' name='$2' valuePropName='checked' rules={[{ required: true }]}>",
      "\t<Switch checkedChildren='Si' unCheckedChildren='No' />",
      "</Form.Item>",
      ""
    ],
    "description": "Input slider selección."
  },
  "Text": {
    "scope": "typescriptreact",
    "prefix": ["app-input-text-item", "text-item"],
    "body": ["<Form.Item label='$1' name='$2'>", "\t<span className='ant-form-text'>${3:texto}</span>", "</Form.Item>", ""],
    "description": "Item de formulario de texto."
  }
}
