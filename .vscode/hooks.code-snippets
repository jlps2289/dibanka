{
  // Place your Ã¡rea de trabajo de TransversalFront snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  "Number Format": {
    "scope": "typescriptreact",
    "prefix": ["app-hook-format-number", "useFormatNumber"],
    "body": "const { format: formatNumber, parser: parserNumber } = useFormatNumber();",
    "description": "Formatear o parsear numeros."
  },
  "Date Format": {
    "scope": "typescriptreact",
    "prefix": ["app-hook-format-date", "useFormatDate"],
    "body": "const { format: formatDate, parser: parserDate } = useFormatDate();",
    "description": "Formatear o parsear fechas."
  },
  "Boolean Format": {
    "scope": "typescriptreact",
    "prefix": ["app-hook-format-boolean", "useFormatBoolean"],
    "body": "const { format: formatBoolean, parser: parserBoolean } = useFormatBoolean();",
    "description": "Formatear o parsear booleanos."
  },
  "Sorter": {
    "scope": "typescriptreact",
    "prefix": ["app-hook-sorter", "useSorter"],
    "body": "const { sorter } = useSorter();",
    "description": "Ordenar listas por propiedad."
  },
  "Modal": {
    "scope": "typescriptreact",
    "prefix": ["app-hook-modal", "useModalSetting"],
    "body": [
      "const { visible, setVisible, dataRecord, setDataRecord } = useModalSetting();",
      "",
      "const onOpen = (record?: any) => {",
      "\tsetVisible(true);",
      "\tsetDataRecord(record);",
      "};",
      "",
      "const onCancel = () => setVisible(false);",
      "",
      "const onOk = (event: any) => {",
      "\t${1:console.log(event);}",
      "\tonCancel();",
      "};",
      ""
    ],
    "description": "Configuraciones del modal."
  },
  "useStepperForm": {
    "scope": "typescriptreact",
    "prefix": ["app-useStepperForm", "useStepperForm"],
    "body": ["const { current, setCurrent, status, setStatus, onNextStep, onPrevStep } = useStepperForm(form);"],
    "description": "Hook para configurar el step de antd con formularios."
  }
}
