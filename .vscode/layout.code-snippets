{
  "page-empty": {
    "scope": "typescriptreact",
    "prefix": ["app-page-empty", "page-empty"],
    "body": [
      "import React from 'react';",
      "",
      "// Componentes",
      "import { PageHeaderComponent } from 'app/shared/components/page-header.component';",
      "",
      "const ${1:Name}Page = () => {",
      "\treturn (",
      "\t\t<div className='fadeInTop container-fluid'>",
      "\t\t\t<PageHeaderComponent",
      "\t\t\t\ttitle='${2:Titulo de la página}'",
      "\t\t\t\tsubTitle='${3:Descripción de la página}'",
      "\t\t\t/>",
      "\t\t\t",
      "\t\t\t$4",
      "\t\t\t",
      "\t\t</div>",
      "\t);",
      "};",
      "",
      "export default ${1:Name}Page;"
    ],
    "description": "Página en blanco."
  },
  "page-consult": {
    "scope": "typescriptreact",
    "prefix": ["app-page-consult", "page-consult"],
    "body": [
      "import React, { useState } from 'react';",
      "",
      "// Antd",
      "import Form from 'antd/es/form';",
      "import Button from 'antd/es/button';",
      "import { ColumnsType } from 'antd/es/table';",
      "",
      "// Utilidades",
      "import { dateRange } from 'app/shared/utils/datePicker.util';",
      "",
      "// Componentes",
      "import { PageHeaderComponent } from 'app/shared/components/page-header.component';",
      "import { RangepickerComponent } from 'app/shared/components/inputs/rangepicker.component';",
      "import { SelectComponent } from 'app/shared/components/inputs/select.component';",
      "import { TableComponent } from 'app/shared/components/table.component';",
      "",
      "const ${1:Demo}Page = () => {",
      "\tconst [dataSource, setDataSource] = useState<any>();",
      "",
      "//#region Columnas table",
      "",
      "\tconst columns: ColumnsType<any> = [];",
      "",
      "//#endregion",
      "",
      "\tconst onSubmit = (values: any) => {",
      "\t\tconsole.log('Success:', values);",
      "\t\tsetDataSource([]);",
      "\t};",
      "",
      "\treturn (",
      "\t\t<div className='fadeInTop container-fluid'>",
      "\t\t\t<PageHeaderComponent title='${2:Titulo}' subTitle='${3:Descripción}' />",
      "",
      "\t\t\t<div className='card card-body mb-4'>",
      "\t\t\t\t<Form layout='vertical' initialValues={{ dates: dateRange.before['Este mes'] }} onFinish={onSubmit}>",
      "\t\t\t\t\t<div className='row'>",
      "\t\t\t\t\t\t<div className='col-md-6 col-lg-4 col-xl-3'>",
      "\t\t\t\t\t\t\t<Form.Item label='Fechas' name='dates' rules={[{ required: true }]}>",
      "\t\t\t\t\t\t\t\t<RangepickerComponent dateDisabledType='before' />",
      "\t\t\t\t\t\t\t</Form.Item>",
      "\t\t\t\t\t\t</div>",
      "\t\t\t\t\t\t<div className='col-md-6 col-lg-4 col-xl-3'>",
      "\t\t\t\t\t\t\t<Form.Item label='Lista' name='list' rules={[{ required: true }]}>",
      "\t\t\t\t\t\t\t\t<SelectComponent options={[]} optionPropkey='id' optionPropLabel='name' />",
      "\t\t\t\t\t\t\t</Form.Item>",
      "\t\t\t\t\t\t</div>",
      "\t\t\t\t\t</div>",
      "\t\t\t\t\t<Form.Item className='mb-0 mt-2'>",
      "\t\t\t\t\t\t<Button type='primary' htmlType='submit'>",
      "\t\t\t\t\t\t\tConsultar",
      "\t\t\t\t\t\t</Button>",
      "\t\t\t\t\t</Form.Item>",
      "\t\t\t\t</Form>",
      "\t\t\t</div>",
      "",
      "\t\t\t<TableComponent rowKey='id' dataSource={dataSource} columns={columns} />",
      "\t\t</div>",
      "\t);",
      "};",
      "",
      "export default ${1:Demo}Page;"
    ],
    "description": "Página para realizar consultas."
  },
  "page-modal": {
    "scope": "typescriptreact",
    "prefix": ["app-page-modal", "page-modal"],
    "body": [
      "import React from 'react';",
      "",
      "// Componentes",
      "import { ModalComponent, IModalProps } from 'app/shared/components/modal.component';",
      "",
      "export const ${1:Demo}Modal: React.FC<IModalProps<any>> = (props) => {",
      "\tconst onSave = () => {",
      "\t\tprops.onOk(true);",
      "\t};",
      "",
      "\treturn (",
      "\t\t<ModalComponent title='${2:Título}' visible={props.visible} onOk={onSave} onCancel={props.onCancel}>",
      "",
      "\t\t\t$3",
      "",
      "\t\t</ModalComponent>",
      "\t);",
      "};",
      ""
    ],
    "description": "Crear componente de modal."
  },
  "page-modal-form": {
    "scope": "typescriptreact",
    "prefix": ["app-page-modal-form", "page-modal-form"],
    "body": [
      "import React, { useEffect } from 'react';",
      "",
      "// Antd",
      "import Form from 'antd/es/form';",
      "",
      "// Utilidades",
      "import { layoutItems } from 'app/shared/utils/form-layout.util';",
      "",
      "// Componentes",
      "import { ModalComponent, IModalProps } from 'app/shared/components/modal.component';",
      "",
      "export const ${1:Demo}Modal: React.FC<IModalProps<any>> = (props) => {",
      "\tconst [form] = Form.useForm();",
      "",
      "\tuseEffect(() => {",
      "\t\tform.setFieldsValue(props.dataRecord);",
      "\t\treturn () => {",
      "\t\t\tform.resetFields();",
      "\t\t};",
      "\t\t// eslint-disable-next-line react-hooks/exhaustive-deps",
      "\t}, [props.dataRecord]);",
      "",
      "\tconst onSubmit = () => {",
      "\t\tform",
      "\t\t\t.validateFields()",
      "\t\t\t.then((values) => {",
      "\t\t\t\tform.resetFields();",
      "\t\t\t\tconsole.log('Ok:', values);",
      "\t\t\t\tprops.onOk(values);",
      "\t\t\t})",
      "\t\t\t.catch((info) => {",
      "\t\t\t\tconsole.log('Failed:', info);",
      "\t\t\t});",
      "\t};",
      "",
      "\tconst onCancel = () => {",
      "\t\tform.resetFields();",
      "\t\tprops.onCancel();",
      "\t};",
      "",
      "\treturn (",
      "\t\t<ModalComponent",
      "\t\t\ttitle='${2:Título}'",
      "\t\t\tvisible={props.visible}",
      "\t\t\tonOk={onSubmit}",
      "\t\t\tokText='Guardar'",
      "\t\t\tonCancel={onCancel}",
      "\t\t>",
      "\t\t\t<Form {...layoutItems} form={form} layout='horizontal'>",
      "",
      "\t\t\t\t$3",
      "",
      "\t\t\t</Form>",
      "\t\t</ModalComponent>",
      "\t);",
      "};"
    ],
    "description": "Crear componente de formulario en un modal."
  },
  "page-crud": {
    "scope": "typescriptreact",
    "prefix": ["app-page-crud", "page-crud"],
    "body": [
      "import React, { useCallback, useEffect, useState } from 'react';",
      "",
      "// Antd",
      "import Space from 'antd/es/space';",
      "import Button from 'antd/es/button';",
      "import { ColumnsType } from 'antd/es/table';",
      "",
      "// Iconos",
      "import { PlusCircleOutlined, EditFilled, DeleteFilled } from '@ant-design/icons';",
      "",
      "// Componentes",
      "import { PageHeaderComponent } from 'app/shared/components/page-header.component';",
      "import { TableComponent } from 'app/shared/components/table.component';",
      "",
      "// Modal",
      "// import { ExampleModal } from './example.modal';",
      "",
      "// Hooks",
      "import { useModalSetting } from 'app/shared/hooks/modal.hook';",
      "",
      "// Services",
      "// import { } from 'app/services/...';",
      "",
      "const ${1:Demo}Page = () => {",
      "\tconst [dataSource, setDataSource] = useState<any>();",
      "",
      "\tconst getDataSource = useCallback(async () => {",
      "\t\t// NOTE: Debe conectar el servicio para cargar la tabla.",
      "\t\tconst resp = await Promise.resolve([]);",
      "\t\tsetDataSource(resp);",
      "\t}, []);",
      "",
      "\tuseEffect(() => {",
      "\t\tgetDataSource();",
      "\t\t// eslint-disable-next-line react-hooks/exhaustive-deps",
      "\t}, []);",
      "",
      "\t//#region Acciones Modal",
      "",
      "\tconst { visible, setVisible, dataRecord, setDataRecord } = useModalSetting();",
      "",
      "\tconst onOpen = (record?: any) => {",
      "\t\tsetVisible(true);",
      "\t\tsetDataRecord(record);",
      "\t};",
      "",
      "\tconst onCancel = () => setVisible(false);",
      "",
      "\tconst onOk = () => {",
      "\t\tgetDataSource();",
      "\t\tonCancel();",
      "\t};",
      "",
      "\t//#endregion",
      "\t//#region Acciones table",
      "",
      "\tconst onRemove = (id: number) => console.log('Remove:', id);",
      "",
      "\t//#endregion",
      "\t//#region Columnas table",
      "",
      "\tconst columns: ColumnsType<any> = [",
      "\t\t{",
      "\t\t\ttitle: 'Demo',",
      "\t\t\tdataIndex: 'demo'",
      "\t\t},",
      "\t\t{",
      "\t\t\ttitle: 'Acciones',",
      "\t\t\tdataIndex: 'id',",
      "\t\t\talign: 'center',",
      "\t\t\tsorter: false,",
      "\t\t\twidth: 100,",
      "\t\t\tfixed: 'right',",
      "\t\t\trender: (value, record) => (",
      "\t\t\t\t<Space size='small'>",
      "\t\t\t\t\t<Button",
      "\t\t\t\t\t\tsize='small'",
      "\t\t\t\t\t\ttype='primary'",
      "\t\t\t\t\t\tshape='circle'",
      "\t\t\t\t\t\ttitle='Editar'",
      "\t\t\t\t\t\ticon={<EditFilled />}",
      "\t\t\t\t\t\tonClick={() => onOpen(record)}",
      "\t\t\t\t\t/>",
      "\t\t\t\t\t<Button",
      "\t\t\t\t\t\tsize='small'",
      "\t\t\t\t\t\ttype='primary'",
      "\t\t\t\t\t\tdanger",
      "\t\t\t\t\t\tshape='circle'",
      "\t\t\t\t\t\ttitle='Eliminar'",
      "\t\t\t\t\t\ticon={<DeleteFilled />}",
      "\t\t\t\t\t\tonClick={() => onRemove(value)}",
      "\t\t\t\t\t/>",
      "\t\t\t\t</Space>",
      "\t\t\t)",
      "\t\t}",
      "\t];",
      "",
      "\t//#endregion",
      "",
      "\treturn (",
      "\t\t<div className='fadeInTop container-fluid'>",
      "\t\t\t<PageHeaderComponent title='${2:Title}' subTitle='${3:Descripción}' />",
      "",
      "\t\t\t<Button type='primary' icon={<PlusCircleOutlined />} onClick={() => onOpen()}>",
      "\t\t\t\tAgregar nuevo",
      "\t\t\t</Button>",
      "",
      "\t\t\t<TableComponent rowKey='id' dataSource={dataSource} columns={columns} />",
      "\t\t\t{/* <ExampleModal visible={visible} dataRecord={dataRecord} onCancel={onCancel} onOk={onOk} /> */}",
      "\t\t</div>",
      "\t);",
      "};",
      "",
      "export default ${1:Demo}Page;",
      ""
    ],
    "description": "Página para crear un CRUD."
  }
}
